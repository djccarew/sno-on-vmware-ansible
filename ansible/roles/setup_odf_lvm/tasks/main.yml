---
- name: Look for kubeconfig file
  stat:
    path: auth/{{ sno_cluster_name }}-kubeconfig
  register: kubeconfig_file

- name: Verify that kubeconfig file exists
  assert:
    that:  kubeconfig_file.stat.exists
    fail_msg: "kubeconfig  file auth/{{ sno_cluster_name }}-kubeconfig is required for this playbook"
    success_msg: "Required kubeconfig file exists"

- name: Setup for disconnected install
  block:
    - name: Get manifest dir
      find: 
        file_type: directory
        paths: "mirrored-images/{{ sno_release }}/olm"
        patterns: "manifests-local-index-*"
        recurse: no
      register: manifest_dirs

    - name: Save as var
      set_fact:
        manifest_dir: "{{ manifest_dirs.files[0].path }}"

    - name: Gen Catalog source
      template:
        src: odflvm-catalog-source.yml.j2
        dest: "k8s/{{ sno_version }}/odmlvm-catalog-source.yml"

    - name: Add Catalog source
      community.okd.k8s:
        state: present
        src: "k8s/{{ sno_version }}/odmlvm-catalog-source.yml"
        validate_certs: no
        kubeconfig: "auth/{{ sno_cluster_name }}-kubeconfig"

    - name: Add image content source policy
      community.okd.k8s:
        state: present
        src: "{{ manifest_dir }}/imageContentSourcePolicy.yaml"
        validate_certs: no
        kubeconfig: "auth/{{ sno_cluster_name }}-kubeconfig"

    - name: Wait up to  3 mins for Catalog Source to be ready
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: CatalogSource
        name: local-index-olm-mirror-redhat-operator-index
        namespace: openshift-marketplace
      register: airgapped_cs
      until: airgapped_cs.api_found is defined and airgapped_cs.api_found and airgapped_cs.resources  is defined and (airgapped_cs.resources | length) > 0 and airgapped_cs.resources[0].status.connectionState.lastObservedState == 'READY'
      delay: 10
      retries: 18
      ignore_errors: yes

  when:  sno_install_is_airgapped 

- name: "Install ODF LVM Operator"
  community.okd.k8s:
    state: present
    src: "{{ item }}"
    validate_certs: no
    kubeconfig: "auth/{{ sno_cluster_name }}-kubeconfig"
  with_items:
    - "k8s/{{ sno_version }}/odflvm-namespace.yml"
    - "k8s/{{ sno_version }}/odflvm-operatorgroup.yml"
    - "k8s/{{ sno_version }}/odflvm-subscription.yml"

- name: Wait up to  3 mins for Subscription to be ready
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: odf-lvm-operator
    namespace: openshift-storage
  register: odf_lvm_subscription
  until: odf_lvm_subscription.api_found is defined and odf_lvm_subscription.api_found and odf_lvm_subscription.resources  is defined and (odf_lvm_subscription.resources | length) > 0 and odf_lvm_subscription.resources[0].status.currentCSV is defined
  delay: 10
  retries: 18
  ignore_errors: true

- name: debug
  debug:
    var: odf_lvm_subscription

- name: Wait up to  3 mins for LVM Operator CSV to be avail
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ odf_lvm_subscription.resources[0].status.currentCSV }}"
    namespace: openshift-storage
  register: odf_lvm_csv
  until: odf_lvm_csv.api_found is defined and odf_lvm_csv.api_found and odf_lvm_csv.resources  is defined and (odf_lvm_csv.resources | length) > 0 and odf_lvm_csv.resources[0].status.phase == 'Succeeded'
  delay: 10
  retries: 18
  ignore_errors: true

- name: debug
  debug:
    var: odf_lvm_csv

- name: "Create  LVMCluster instance"
  community.okd.k8s:
    state: present
    src: "k8s/{{ sno_version }}/odflvm-lvmcluster.yml"
    validate_certs: no
    kubeconfig: "auth/{{ sno_cluster_name }}-kubeconfig"

- name: Wait up to  5 mins for for LVM Cluster to be avail
  kubernetes.core.k8s_info:
    api_version: lvm.topolvm.io/v1alpha1
    kind: LVMCluster
    name: lvmcluster-sno
    namespace: openshift-storage
  register: odf_lvm_cluster
  until: odf_lvm_cluster.api_found is defined and odf_lvm_cluster.api_found and  odf_lvm_cluster.resources is defined  and odf_lvm_cluster.resources[0].status.deviceClassStatuses is defined and odf_lvm_cluster.resources[0].status.deviceClassStatuses[0].nodeStatus[0].status == "Ready"
  delay: 10
  retries: 30
  ignore_errors: yes

- name: Make ODF LVM storage class the default
  shell: |
    oc patch storageclass odf-lvm-vg1 -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
  environment:
    KUBECONFIG: "auth/{{ sno_cluster_name }}-kubeconfig"

- name: Ending message
  debug:
    msg: "ODF LVM successfully installed and configured"
