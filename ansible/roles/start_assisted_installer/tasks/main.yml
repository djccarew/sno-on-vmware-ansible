---
- name: Stop if already running
  shell: podman pod stop assisted-installer &&  podman pod stop assisted-installer
  args:
    chdir: assisted-installer
  ignore_errors: yes


- name: Airgapped is configured 
  block:

    - name: Copy assisted installer postgresql images to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/postgresql-12-centos7-centos7.tar docker://{{ sno_local_registry }}/centos7/postgresql-12-centos7:latest
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer ui image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-installer-ui-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-installer-ui:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer  image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-installer-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-installer:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer controller image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-installer-controller-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-installer-controller:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer agent image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-installer-agent-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-installer-agent:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer service image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-service-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-service:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer image service  image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/assisted-image-service-{{ ai_image_tag }}.tar docker://{{ sno_local_registry }}/edge-infrastructure/assisted-image-service:{{ ai_image_tag }}
      args:
        chdir: "mirrored-images/ai"

    - name: Copy assisted installer k8s.gcr.io/pause:3.5 image to mirror registry
      shell: |
        skopeo copy --dest-creds "init:{{ mirror_registry_password }}" docker-archive:$(pwd)/pause-3.5.tar docker://{{ sno_local_registry }}/pause:3.5
      args:
        chdir: "mirrored-images/ai"

    - name: Setup registries.conf for SNO VM
      template:
        src: registries.conf.j2
        dest: assisted-installer/registries.conf

    - name: Convert to string 
      set_fact:
        registries_conf: "{{ lookup('file','assisted-installer/registries.conf') | replace('\n','\\n') }}"


    - name: Convert mirror ca cert to string
      set_fact: 
         mirror_ca_cert: "{{ lookup('file', 'certs/ca/quayCA.crt') | replace('\n','\\n') }}"

    - name: Map references to k8s.gcr.io to local reg 
      blockinfile:
        path: "/etc/containers/registries.conf"
        state: present
        block: |
          [[registry]]
          prefix = ""
          location = "k8s.gcr.io/pause"
          mirror-by-digest-only = false
 
          [[registry.mirror]]
          location = "{{ sno_util_hostname }}:8443/pause"
      become: yes
      
  when: sno_install_is_airgapped


- name: Setup configmap.yml file for airgapped
  template: 
    src: configmap-airgapped.j2
    dest: assisted-installer/configmap.yml
    force: yes
  when: sno_install_is_airgapped

- name: Setup configmap.yml file for non airgapped
  template: 
    src: configmap.j2
    dest: assisted-installer/configmap.yml
    force: yes
  when: not sno_install_is_airgapped

- name: Setup pod.yml file for airgapped
  template:
    src: pod-airgapped.j2
    dest: assisted-installer/pod.yml
    force: yes
  when: sno_install_is_airgapped
  
- name: Setup pod.yml file for non airgapped
  template:
    src: pod.j2
    dest: assisted-installer/pod.yml
    force: yes
  when: not sno_install_is_airgapped

- name: Start the assisted installer airgapped
  command: podman play kube  --authfile ../auth/pull-secret-airgapped.txt  --configmap configmap.yml pod.yml 
  args:
    chdir: assisted-installer
  when: sno_install_is_airgapped

- name: Start the assisted installer non airgapped
  command: podman play kube --configmap configmap.yml pod.yml 
  args:
    chdir: assisted-installer
  when: not sno_install_is_airgapped



- name: Give the assisted installer some time to start 
  pause:
    seconds: 10

